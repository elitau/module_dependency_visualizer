include = ~w(ApplicationService Events. EventListener EventPublisher ProcessManager)

exclude = [
  "Agent",
  "Shared",
  "Map",
  "List",
  "Stream",
  "Path",
  "Poison",
  "Logger",
  "Timex",
  "File",
  "Enum",
  "crypto",
  "String",
  "Base",
  "Integer",
  "DateTime",
  "os",
  "Number",
  "Elixir.Kernel",
  "Regex",
  "URI",
  ~r(Application\Z),
  "Date",
  "Task",
  "Tesla",
  "Jason",
  "Supervisor",
  "Atom",
  "Process",
  "Plug",
  "Plug.Conn",
  "IO",
  "init",
  "rand",
  "IO",
  "erlang",
  "Float",
  "Kernel",
  "Keyword",
  "Plug.Upload",
  "Elixir.Access",
  "Mix",
  "Metadata",
  "Multi",
  ~r(Freigabe\Z),
  ~r(Freigabe\.Abwesenheit\Z),
  ~r(Freigabe\.Ansprechpartner\Z),
  ~r(Freigabe\.Arbeitszeit\Z),
  ~r(Freigabe\.ArbeitszeitAusArbeitszeitzeile\Z),
  ~r(Freigabe\.Arbeitszeitenpaket\Z),
  ~r(Freigabe\.Arbeitszeitenpaket.Arbeitsturnus\Z),
  ~r(Freigabe\.Abrechnungsperiode\Z),
  ~r(Freigabe\.Arbeitnehmer\Z),
  ~r(Freigabe\.Auftrag\Z),
  ~r(Freigabe\.Import\Z),
  ~r(Freigabe\.Disposition\Z),
  ~r(Freigabe\.Reklamation\Z),
  ~r(Freigabe\.Reklamation\.Kommentar\Z),
  ~r(Freigabe\.Rechnungsturnus\Z),
  ~r(Freigabe\.RechnungsturnusFuerAuftrag\Z),
  ~r(Freigabe\.SollIstAbgleich\Z),
  "StuditempsMitarbeiter",
  "AppendableEvent",
  "LoggableEvent",
  "Repo",
  "EventStore",
  "Tackle",
  "Exception",
  "CommonFunctions",
  "Behaviour",
  "application",
  "Module",
  "ExUnit.Assertions",
  "ArgumentError",
  "Ecto.Query",
  "Ecto.Schema"
]

# Available colors: https://www.graphviz.org/doc/info/colors.html#x11
colors = [
  {~r|ApplicationService|, :lightblue},
  {~r|EventPublisher|, :yellow},
  {~r|EventListener|, :green},
  {~r|Events|, :orange}
]

ModuleDependencyVisualizer.run(Path.wildcard(System.argv()),
  include: include,
  exclude: exclude,
  colors: colors,
  keep_graph_containing: "Freigabe.ArbeitszeitenpaketFreigebenApplicationService",
  edges_to_reverse: [
    {~r(EventListener\Z), ~r(Events\.)},
    {~r(ProcessManager\Z), ~r(Events\.)},
    {~r(EventPublisher\Z), ~r(Events\.)}
  ]
)
